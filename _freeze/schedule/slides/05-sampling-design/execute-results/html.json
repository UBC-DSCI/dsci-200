{
  "hash": "82001caf49610f86d2000fd5583fff82",
  "result": {
    "engine": "knitr",
    "markdown": "---\nlecture: \"05 - Sampling Design\"\nformat: revealjs\nmetadata-files: \n  - _metadata.yml\n---\n\n\n## {{< meta lecture >}} {.large background-image=\"img/smooths.png\" background-opacity=\"0.3\" background-size=\"50%\"}\n\n[DSCI 200]{.secondary}\n\n[{{< meta author >}}]{.secondary}\n\nLast modified -- 29 July 2025\n\n\n\n\n\n$$\n\\DeclareMathOperator*{\\argmin}{argmin}\n\\DeclareMathOperator*{\\argmax}{argmax}\n\\DeclareMathOperator*{\\minimize}{minimize}\n\\DeclareMathOperator*{\\maximize}{maximize}\n\\DeclareMathOperator*{\\find}{find}\n\\DeclareMathOperator{\\st}{subject\\,\\,to}\n\\newcommand{\\E}{E}\n\\newcommand{\\Expect}[1]{\\E\\left[ #1 \\right]}\n\\newcommand{\\Var}[1]{\\mathrm{Var}\\left[ #1 \\right]}\n\\newcommand{\\Cov}[2]{\\mathrm{Cov}\\left[#1,\\ #2\\right]}\n\\newcommand{\\given}{\\ \\vert\\ }\n\\newcommand{\\X}{\\mathbf{X}}\n\\newcommand{\\x}{\\mathbf{x}}\n\\newcommand{\\y}{\\mathbf{y}}\n\\newcommand{\\P}{\\mathcal{P}}\n\\newcommand{\\R}{\\mathbb{R}}\n\\newcommand{\\norm}[1]{\\left\\lVert #1 \\right\\rVert}\n\\newcommand{\\snorm}[1]{\\lVert #1 \\rVert}\n\\newcommand{\\tr}[1]{\\mbox{tr}(#1)}\n\\newcommand{\\brt}{\\widehat{\\beta}^R_{s}}\n\\newcommand{\\brl}{\\widehat{\\beta}^R_{\\lambda}}\n\\newcommand{\\bls}{\\widehat{\\beta}_{ols}}\n\\newcommand{\\blt}{\\widehat{\\beta}^L_{s}}\n\\newcommand{\\bll}{\\widehat{\\beta}^L_{\\lambda}}\n\\newcommand{\\U}{\\mathbf{U}}\n\\newcommand{\\D}{\\mathbf{D}}\n\\newcommand{\\V}{\\mathbf{V}}\n$$\n\n\n\n\n## Attribution\n<br><br>\n\n*This material is adapted from* [*Chapters 5 of Elementary Statistics with R*](https://homerhanumat.github.io/elemStats/).\n\n<br><br>\n\n## Learning Objectives \n<br><br>\n\n- Recognize some common types of sampling designs, such as simple random sampling, stratified sampling, cluster sampling, and systematic sampling.\n\n- Analyze a given scenario to determine an appropriate sampling scheme.\n\n- Identify possible sources of sampling bias.\n\n## Asking a Question\n<br><br>\nLet's recall the 6 types of data analysis questions we learned about in DSCI 100: \n<br><br>\n\n:::incremental\n- Descriptive\n- Exploratory\n- Predictive\n- Inferential\n- Causal\n- Mechanistic\n:::\n\n\n## A Sample \n<br><br>\n\n- To answer these questions, we first need some data! \n\n- While we *could* simulate data (more to come later in this course), it is ideal if we have access to a sample that is representative of our target population. \n\n- A <span class=\"secondary\">population</span> is a collection of all subjects or observations we are interested in (e.g., all UBC students).\n\n- A <span class=\"secondary\">sample</span> is a subset of of our population that we will use to draw conclusions about the larger population (e.g., DSCI 200 students). \n\n## \n\n<div style=\"text-align: center;\">\n  <img src=\"https://www.scribbr.com/wp-content/uploads/2019/09/population-vs-sample-1.png\" style=\"width: 50%;\">\n</div>\n\n<div style=\"font-size: 0.6em; text-align: center; color: gray;\">\nSource: <a href=\"https://www.scribbr.com/methodology/population-vs-sample/\" target=\"_blank\">Scribbr: Population vs. Sample</a>\n</div>\n\n\n## Sampling Scenario\n<br><br>\n\n- Imagine you want to investigate the study habits of UBC undergraduate students. Since surveying every student isn't practical, you need to collect a sample. Discuss the following prompts with the people around you:\n\t- How would you select your sample?\n\t- How can you ensure your sample represents the entire student body?\n\t- What biases might affect your results?\n\n## Types of Sampling\n<br><br>\nIn data science, selecting a **representative sample** is crucial for making accurate inferences about a population.\n<br><br>\n\n- Random Sampling\n- Non-Random Sampling\n\nWe will focus on random sampling schemes in this course.\n\n## Random Sampling Methods\n<br><br>\nWe will explore four key random sampling methods:\n<br><br>\n\n:::incremental\n- Simple Random Sampling (SRS)\n- Systematic Sampling\n- Stratified Sampling\n- Cluster Sampling\n:::\n\n## Simple Random Sampling (SRS)\n<br><br>\n\n- In a simple random sample (SRS), for a given sample size $n$ every set of $n$ observations \nhas the same chance to be the sample that is actually selected. \n\n- Note that this does not mean that each individual in the population has an equal chance of being selected, but that each sample of a certain size as the same chance of being selected. \n\n## SRS Example\n<br><br>\n\n- Suppose you want to look into student performance at UBC.\n- There are ~45,000 undergrad students at UBC Vancouver, but surveying all of them isn't feasible.\n- You write each student's ID on an identical slip of paper and place all the slips into a basket. \n- You mix the papers thoroughly, then blindly draw 500 slips, one at a time, without looking. You record the GPA of each student whose ID is drawn.\n\n\n## \n\nLet's revisit this example in R\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(dplyr)\n\n# Simulate student population data\n\nset.seed(200)\n\nstudent_data <- tibble(\n  Student = paste(\"Student\", 1:45000),\n  GPA = runif(45000, min = 2.5, max = 4.0)  # Generate random GPAs between 2.5 and 4.0\n)\n\ndim(student_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 45000     2\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(student_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  Student     GPA\n  <chr>     <dbl>\n1 Student 1  3.30\n2 Student 2  3.38\n3 Student 3  3.38\n4 Student 4  3.54\n5 Student 5  3.50\n6 Student 6  3.76\n```\n\n\n:::\n:::\n\n\n##\n\nUse the [`slice_sample`](https://dplyr.tidyverse.org/reference/slice_sample.html) function from `dplyr` to draw a sample of size 100:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsrs_student <- student_data |> slice_sample(n = 100)\ndim(srs_student)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 100   2\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(srs_student)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  Student         GPA\n  <chr>         <dbl>\n1 Student 41525  3.57\n2 Student 7729   2.71\n3 Student 11342  2.72\n4 Student 3268   3.28\n5 Student 17378  3.87\n6 Student 10243  3.57\n```\n\n\n:::\n\n```{.r .cell-code}\nsrs_student |>\n\tsummarise(Mean_GPA = mean(GPA))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  Mean_GPA\n     <dbl>\n1     3.25\n```\n\n\n:::\n:::\n\n\n\n##\n\nAlternative solution using dplyr's `sample_frac()` functions\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nstudent_data |> sample_frac(size = 0.1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4,500 × 2\n   Student         GPA\n   <chr>         <dbl>\n 1 Student 23289  3.74\n 2 Student 9688   3.42\n 3 Student 28888  3.00\n 4 Student 10307  2.56\n 5 Student 28497  3.89\n 6 Student 10028  3.41\n 7 Student 37556  3.45\n 8 Student 6474   3.82\n 9 Student 3143   3.53\n10 Student 22272  3.70\n# ℹ 4,490 more rows\n```\n\n\n:::\n:::\n\n\n\n## SRS: Pros and Cons\n\nPros:\n\n:::incremental\n- The selection of one element does not affect the selection of others.\n- Each possible sample, of a given size, has an equal chance of being selected.\n- Simple random samples tend to be fairly reasonable representations of the population.\n- Requires little knowledge of the population.\n:::\n\nCons:\n\n:::incremental\n- If there are small subgroups within the population, a SRS may not give an accurate representation of that subgroup (especially true if the sample size is small).\n- If the population is large, it can be expensive (both in time and money) to collect the data.\n:::\n\n\n## Systematic Sampling\n<br><br>\n\n- In a systematic sample, the members of the population are put in a \"row\". \n- Then 1 out of every $k$ members are selected \n- Sometimes we refer to this as 1-in-$k$ sampling.\n- The starting point is randomly chosen from the first $k$  elements and then elements are sampled at the same location in each of the subsequent segments of size $k$. \n .\n\n## Systematic Sampling Example \n- Again, suppose you want to survey UBC students. \n- You stand outside of the bookstore and randomly select every 10th person.\n- Let's look at our `student_data` again and perform a 1-in-10 systematic sample: \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(200)\n\nstart <- sample(1:10,1) # randomly define a student to start with\n\nstudent_data |> \n\tslice(seq(start, n(), by = 10)) # sample every 10th student\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4,500 × 2\n   Student      GPA\n   <chr>      <dbl>\n 1 Student 6   3.76\n 2 Student 16  2.96\n 3 Student 26  2.90\n 4 Student 36  3.34\n 5 Student 46  3.53\n 6 Student 56  2.70\n 7 Student 66  3.52\n 8 Student 76  2.97\n 9 Student 86  3.68\n10 Student 96  3.06\n# ℹ 4,490 more rows\n```\n\n\n:::\n:::\n\n\n\n\n## Systematic Sampling: Pros and Cons\n\nPros:\n\n:::incremental\n- Assures an even, random sampling of the population.\n- When the population is an ordered list, a systematic sample gives a better representation of the population than a SRS.\n- Can be used in situations where a SRS is difficult or impossible. \n- It is especially useful when the population that you are studying is arranged in time.\n:::\n\nCons:\n\n:::incremental\n- Not every combination has an equal chance of being selected. Many combinations will never be selected using a systematic sample!\n\n- If there is periodicity in the population (i.e., after ordering, the selections match some pattern in the list), the sample may not be representative of the population.\n:::\n\n## iClicker Question\n\nYou are using systematic sampling to select every 4th student (starting with Student 1). The table below includes the first 8 rows of the data and lists students by their ClassYear and GPA. Based on the sampling strategy, which of the following is most likely to occur?\n\n:::: {.columns}\n\n::: {.column width=\"30%\"}\n\n| ID  | ClassYear | GPA  |\n| --- | --------- | ---- |\n| 1   | Freshman  | 3.2  |\n| 2   | Sophomore | 3.5  |\n| 3   | Junior    | 3.6  |\n| 4   | Senior    | 3.8  |\n| 5   | Freshman  | 3.1  |\n| 6   | Sophomore | 3.3  |\n| 7   | Junior    | 3.7  |\n| 8   | Senior    | 3.9  |\n:::\n\n::: {.column width=\"10%\"}\n<!-- empty column to create gap -->\n:::\n\n::: {.column width=\"60%\"}\n- **A)** The sample will have a balanced representation of Freshmen, Sophomores, Juniors, and Seniors.  \n- **B)** The sample will likely overrepresent Seniors and underrepresent Freshmen, Sophomores, and Juniors.  \n- **C)** The sample will be biased toward Freshmen, as they are more likely to appear at the beginning of the list.  \n- **D)** The sample will likely underrepresent Seniors and overrepresent Freshmen, Sophomores, and Juniors. \n:::\n\n::::\n\n## Stratified Sampling\n<br></br>\n\n- In a stratified sample, the population must first be separated into homogeneous groups, or strata. \n- Each element only belongs to one stratum and the stratum consist of elements that are alike in some way.\n- A simple random sample is then drawn from each stratum, which is combined to make the stratified sample.\n\n## Stratified Sampling Example\n- Suppose we consider student major as a strata:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(200)\n\nmajors <- c(\"CS\", \"Math\", \"Stat\", \"Bio\", \"Data Science\", \"Phys\", \"Chem\")\n\nstudent_data <- student_data |>\n  mutate(Major = sample(majors, size = n(), replace = TRUE))\n\nstrat_sampled_data <- student_data |>\n  group_by(Major) |>\n  slice_sample(n=100) # sample 100 students from each major \n\nhead(strat_sampled_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n# Groups:   Major [1]\n  Student         GPA Major\n  <chr>         <dbl> <chr>\n1 Student 35080  3.41 Bio  \n2 Student 7922   3.19 Bio  \n3 Student 23923  2.57 Bio  \n4 Student 11018  3.28 Bio  \n5 Student 29294  2.58 Bio  \n6 Student 11656  2.79 Bio  \n```\n\n\n:::\n:::\n\n\n\n## Stratified Sampling: Pros and Cons\n\nPros:\n\n:::incremental\n- Representative of the population, because elements from all strata are included in the sample.\n\n- Ensures that specific groups are represented, sometimes even proportionally, in the sample.\n\n- Allows comparisons to be made between strata, if necessary. For example, a stratified sample allows you to easily compare the mean GPA of Biology students to the mean GPA of Chemistry students.\n:::\n\nCons:\n\n:::incremental\n- Requires prior knowledge of the population. You have to know something about the population to be able to split into strata!\n:::\n\n## Conceptual Question\n\nYou are conducting a stratified random sampling study to survey students at a university. The population consists of the following groups:\n\n- Freshmen: 2000 students\n- Sophomores: 1500 students\n- Juniors: 1000 students\n- Seniors: 500 students\n- Graduate Students: 30 students\n\nWhat might you do to ensure that the sample is representative of the population, given the imbalanced nature of each subgroup? \n\n## Cluster Sampling\n<br></br>\n\n- Cluster sampling is a sampling method used when natural groups are evident in the population. \n- The clusters should all be similar each other and roughly homogenous within each cluster. \n- To take a cluster sample, we randomly select a certain number of clusters, and then use all observations within the sampled clusters.\n\n> Example: Say we want to look into the average heights of NHL players. We could randomly sample 3 teams (clusters), and record the heights of all of the players on these selected teams.\n\n## Cluster Sampling Example\nSuppose each the student data had 30 class secions and we consider each `ClassSection` to be a cluster:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(200)\n\n# Add simulated class sections (clusters)\nstudent_data <- student_data |>\n  mutate(ClassSection = sample(paste0(\"Section_\", 1:30), size = n(), replace = TRUE))\n\n# Randomly select 5 clusters \nselected_clusters <- student_data |>\n  distinct(ClassSection) |>\n  slice_sample(n = 5)\n\n# Filter the data to include all students from the selected clusters\ncluster_sampled_data <- student_data |>\n  filter(ClassSection %in% selected_clusters)\n\nhead(cluster_sampled_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 4\n# ℹ 4 variables: Student <chr>, GPA <dbl>, Major <chr>, ClassSection <chr>\n```\n\n\n:::\n:::\n\n\n\n\n## Think, Pair, Share\n<br></br>\n\nDiscuss the similarities and differences between stratified random sampling and cluster sampling. Be prepared to share with the class!\n\n:::incremental\n- In a stratified sample, the differences between stratum are high while the differences within strata are low. \n- In a cluster sample, the differences between clusters are low while the differences within clusters are high.\n:::\n\n## Sampling Scenario\n<br></br>\n\n- Imagine you're conducting a survey to assess the quality of food on UBC's campus. \n- Your goal is to gather feedback to help the campus dining services improve their offerings.\n- You set up a booth in the Nest during lunchtime and invite students to fill out the survey while they eat. \n\n> *Question: What potential problems might arise from this sampling approach?*\n\n## Sampling Bias \n\n:::incremental\n- A sampling method is considered *biased* if it systemically produces samples that do not accurately reflect the population, where certain individuals are more or less likely to be selected\n- Sampling bias can lead to an unrepresentative sample (i.e.,  a sample that does not reflect the population of interest).\n- We will now introduce three different types of sampling bias: \n\t- Selection bias\n\t- Nonresponse bias\n\t- Response bias\n::: \n\n\n## Selection Bias\n<br></br>\n\n- A sampling method exhibits **selection bias** if its process for choosing the sample systematically tends to over-represent or under-represent certain subsets of the population.\n- While we don’t always have control over certain types of selection bias, it’s important to recognize that some sampling techniques are more prone to it than others.\n\n\n## Convenience Sampling\n<br></br>\n\n:::incremental \n- Convenience sampling is the practice of sampling observations that are easy to access or are readily available, making it convenient for the person collecting the data.\n- A convenience sample can suffer from selection bias, as it can lead to the underrepresentation or omission of certain subgroups in the population. \n\n- Example: I wanted to have an idea of people's thoughts on the food quality on campus, so I ask my DSCI 200 class. \n:::\n\n## Volunteer Sampling\n\n:::incremental \n- As the name suggests, volunter sampling is when a sample is collected from subjects that have volunteered to participate (i.e., individuals self-select whether or not to participate).\n- Oftentimes, people with strong opinions who feel compelled to participate are overrepresented and individuals with neutral opinions may opt to not participate, resulting in a biased sample. \n- In a volunteer sample you are also leaving it up to each member of the population to find out about your survey to have the opportunity to participate.\n- Example: In a survey about campus food quality, students who have strong opinions (either positive or negative) may be more likely to volunteer to participate, leading to a sample that over-represents those with extreme views and under-represents students with neutral opinions.\n:::\n\n## Nonresponse Bias \n\n:::incremental \n- If we avoid selection bias (perhaps by choosing a sampling scheme like SRS), we still need participants to consent to participate to being sampled.\n- Indiviudals may refuse to participate or we may not be able to contact them at all.\n- A sampling method exhibits **nonresponse bias** if people who choose to participate in the survey systematically differ from the population in some important way.\n- Examples: \n\t- In a survey about drug use, individuals who engage in illegal or behaviours \t\t\t\t\tperceived as \"taboo\" may be less likely to respond, leading to nonresponse bias \t\t\twhere the sample underrepresents people who use drugs.\n\t- In an email survey about healthcare, older adults who may not have access to email \t\tor are less familiar with technology might not participate, resulting in \t\t\t\t\t\t\t\tnonresponse bias where the sample overrepresents younger, tech-savvy individuals \t\tand underrepresents older populations.\n:::\n\n\n## Response Bias\n\n:::incremental\n- The way a survey question is phrased can influence how subjects respond. \n- For example, consider the wording in the following questions and how the phrasing might impact responses:  \n\t- *\"How much do you agree that climate change is a serious issue that requires immediate action?\"*\n\t- *\"What are your thoughts on the issue of climate change and the need for action?\"*\n- A sampling method exhibits **response bias** if the way the questions are asked or framed tends to influence the individuals’ responses.\n:::\n\n## Factors Influencing Response Bias\n\n:::incremental\n- Deliberate (or unintentional) wording bias\n- Desire of the respondents to please\n- Asking the uninformed\n- Unnecessary complexity\n- Ordering of questions\n- Confidentiality concerns\n- Certain groups (e.g., minorities, marginalized populations) may be left out or underrepresented if the sampling frame does not fully capture the diversity of the population or contains inherent biases.\n:::\n\n## A Case Study of Sampling Bias and Black Voters in Online, Opt-In Polls\n\n- Study focused on Philadelphia’s 2023 mayoral primary \n- Online surveys promoted via social media had a very low participation rate (~0.4%)\n- White residents and college graduates were more likely to respond, leading to sample bias\n- Online polls underestimated support for the Black Democrat winner of the mayoral primary\n- Weighting and geographic stratification did not fully correct this bias\n\n> Source: [Getting the Race Wrong: A Case Study of Sampling Bias and Black Voters in Online, Opt-In Polls](https://www.cambridge.org/core/journals/journal-of-race-ethnicity-and-politics/article/getting-the-race-wrong-a-case-study-of-sampling-bias-and-black-voters-in-online-optin-polls/55C516D26B21DA6436FDDFB2B2FF1FCA\n)  \n\n## Ethical Implications of Sampling\n<br></br>\n\n- Later in this course, we will explore the ethical implications related to data ownership, privacy, and acquisition.\n\n- For now, it's important to note that consent, privacy, and the consideration of equity, diversity, and inclusion should be prioritized throughout any data collection process.\n\n- For further details on these considerations, check out [NSERC's guide on integrating equity, diversity and inclusion considerations in research](https://www.nserc-crsng.gc.ca/NSERC-CRSNG/Policies-Politiques/EDI_guidance-Conseils_EDI_eng.asp).\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}