---
lecture: "13 - Data Privacy I"
format: revealjs
metadata-files: 
  - _metadata.yml
---

{{< include _titleslide.qmd >}}

## Attribution
<br><br>

*This material is adapted from the following sources:* 

- [*Data Privacy Handbook*](https://utrechtuniversity.github.io/dataprivacyhandbook/)
- [*DSCI 541: Privacy, Ethics, and Security at UBC*](https://ubc-mds.github.io/course-descriptions/DSCI_541_priv-eth-sec/)
- [*STA 199: Introduction to Data Science and Statistical Thinking, Duke University*](https://sta199-s24.github.io/) 

<br><br>


## What Are You Comfortable Sharing?



::: column
Consider different types of data:

:::incremental
- Your favorite type of music  
- Your Instagram likes and follows  
- Your e-mail  
- Your name and DOB  
- Your GPS location throughout the day 
- Your browsing history
- Your private messages/DMs  
:::
:::

::: column
:::incremental
- Discussion: 
1. Which of these data would you feel comfortable sharing with an app?  
2. What questions would you want to ask before sharing this data?  
3. What if it combined two or three pieces of information? 
:::
:::

## Learning Objectives

By the end of today's lesson, you should be able to:

:::incremental
- Understand key terms in data privacy, including PII, pseudonymization, and anonymization

- Identify direct and indirect identifiers in sample data sets
- Explain why de-identification is challenging and context-dependent
- Apply basic de-identification techniques (e.g., suppression, top-coding, permutation) using R
- Recognize the tradeoff between data utility and privacy risk
:::


## 

- Even something as simple as your Facebook "likes" can reveal a lot more than you think...
- Researchers at Cambridge showed that algorithms could predict:
	- Sexual orientation with up to 88% accuracy
	- Race with 95% accuracy
	- Political affiliation with 85% accuracy
- All from analyzing the pages and posts you "liked" (no profile bio or messages needed)!

> [https://www.cam.ac.uk/research/news/digital-records-could-expose-intimate-details-and-personality-traits-of-millions](https://www.cam.ac.uk/research/news/digital-records-could-expose-intimate-details-and-personality-traits-of-millions)

## What Happens to Your Data?

Every time you use an app, visit a website, click on a link, fill out a survey or even just scroll on your device, your data is being:

:::incremental
- Collected - What you click, search, watch, like or buy  
- Analyzed - Used to predict your behaviour, interests or identity  
- Shared or Sold - Passed to advertisers, data brokers or other companies  
:::

![](https://images.unsplash.com/photo-1579869847557-1f67382cc158?w=900&auto=format&fit=crop&q=60&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MXx8c29jaWFsJTIwbWVkaWF8ZW58MHx8MHx8fDI%3D)

---

## Why Does This Matter?

:::incremental
- You may be targeted with ads, content and potentially misinformation  
- You could be judged or profiled based on your data (even if it’s not accurate) 
- You rarely know who has your data (or what they’re doing with it) 
<br></br>
<br></br>
- So what does this mean for us? Let’s explore how data can be used, what makes certain information sensitive and why it matters.
:::

## Personally Identifiable Information (PII)

- PII refers to any data that can be used to identify a specific individual.
- Direct identifiers: These clearly and uniquely point to a person.
	- Examples: name, social security number, patient ID
- Indirect identifiers: These don’t identify someone on their own, but could when combined.
	- Examples: age, DOB, postal code, race, sex

## Personal Data

Data can be identifiable when:

:::incremental
- They contain directly identifying information.
- It's possible to single out an individual
- It's possible to infer information about an individual based on information in your dataset
- It's possible to link records relating to an individual.
- De-identification is still reversible.
:::

## Scenario: Can This Data Identify You?

A fitness app shares anonymized data with researchers. The dataset includes:

- Step count per day
- General location (postal code)
- Age 
- Time of day the user exercises
- Health conditions

Separately, a publicly available dataset includes information from a local running club: names, age groups and 5K race times.

## The Mosaic Effect

- The "Mosaic Effect" can happens when separate pieces of data, which alone don’t identify anyone, are combined from different sources to reveal personal information or identify an individual.

- In 2000, 87% of the United States population was found to be identifiable using a combination of their ZIP code, gender and date of birth.

![](https://images.unsplash.com/photo-1622227920933-7fcd7377703f?q=80&w=2940&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)

> [https://dataprivacylab.org/projects/identifiability/paper1.pdf](https://dataprivacylab.org/projects/identifiability/paper1.pdf)

## Pseudonymization and Anonymization

- Pseudonymisation and a nonymisation are techniques to de-identify personal data
- Goal: reduce linkability of data to individuals
- We will now define each of these terms 


## Pseudonymization

::: incremental
- Reduces linkability of data to individuals 
- Data cannot identify individuals *without additional information* 
- Often done by replacing direct identifiers with pseudonyms
- Link between real identifiers and pseudonyms is stored separately
- Re-identification remains possible!
:::


## Anonymization

::: incremental
- Data are anonymized when no individual is identifiable (directly or indirectly)
- This applies even to the data controller
- Fully anonymized data are no longer personal data
- Anonymisation is difficult to achieve in practice
:::

## Identifiability Spectrum

- Identifiability is a spectrum 
- More de-identified data = closer to anonymized
- Lower identifiability = lower re-identification risk


![](https://www.kdnuggets.com/wp-content/uploads/spectrum_data_privacy_KD.png)

> [https://www.kdnuggets.com/2020/08/anonymous-anonymized-data.html](https://www.kdnuggets.com/2020/08/anonymous-anonymized-data.html)

## When Are Data Truly anonymous?

- Only if re-identification would require *unreasonable effort* (factors include cost, time and available technology)
- Data are not anonymous if:

::: incremental
- Direct identifiers are present
- Individuals can be singled out from a group
- Re-identification possible via linking datasets (mosaic effect)
- Inference about identity is possible (e.g., through different variables)
- De-identification can be reversed
:::

## Context Matters

- Whether data are anonymous depends on:
  - The context of the research
  - Available external information
  - Future data uses

## De-identification Techniques

Techniques to deidentify your data include:

- Suppression
- Generalization
- Replacement
- Top- and bottom coding
- Adding noise
- Permutation

We will talk about each of these techniques individually. 

## 

First, let's generate some data we can use to help illustrate these concepts. 

```{r}
library(tidyverse)

df <- tibble(
  name = c("Joel Miller", "Ellie Williams", "Tommy Miller", "Abby Anderson"),
  age = c(52, 19, 48, 28),
  height_cm = c(182, 160, 185,173) 
)

df
```

## Suppression

::: incremental
- Remove entire variables, values or records
- Used to eliminate highly identifying or unnecessary data
- Examples:
  - Names, contact details, social security numbers
  - GPS metadata, IP addresses, neuroimaging facial features
  - Outliers or unique participants
:::

## Suppression Example

```{r}
df_suppressed <- df %>%
  select(-name)

df_suppressed
```


## Generalization

::: incremental
- Reduces detail or granularity in the data
- Makes individuals harder to single out
- Examples:
  - Convert date of birth to age, or group into ranges
  - Replace address with town or region
  - Recategorise rare labels into “other” or “missing”
  - Abstract people or places in qualitative data (e.g., “Bob” to “[colleague]”)
:::

## Generalization Example

Here we will show an example of generalization on the `age` column: 

```{r}
df_generalized <- df |>
  mutate(age_group = case_when(
    age < 30 ~ "under 30",
    TRUE     ~ "30+"
  ))|>
  select(-age)

df_generalized
```


## Replacement

::: incremental
- Swap identifying info with less informative alternatives
- Examples:
  - Use pseudonyms for names (with securely stored keyfile)
  - Replace with placeholders (e.g., “[redacted]”)
  - Rounding numeric values
:::

## Creating Pseudonyms

::: incremental
- Pseudonyms should reveal nothing about the subject
- Good pseudonyms:
  - Are random or meaningless strings/numbers
  - Are securely managed (e.g., encrypted keyfile)
- Can be generated using tools in Excel, R, Python, SPSS
:::

## Replacement with Pseudonyms

```{r}
df_pseudonymized <- df |>
  mutate(pseudonym = paste0("ID", row_number())) |>
  select(pseudonym, everything(), -name)

df_pseudonymized
```

## Hashing 

- Hashing converts names into fixed-length, irreversible strings.
- Unlike pseudonyms, hashed values cannot be easily reversed.
- In R, we can use the `digest` package (and function) to hash. 

```{r}
library(digest) 

df_hashed <- df |>
  mutate(name_hash = digest(name)) |>
  select(name_hash, everything(), -name)

df_hashed
```


## Top- and Bottom-Coding

::: incremental
- Limits extreme values in quantitative data
- Recode all values above or below a threshold
- Example: all incomes above \$150,000 become \$150,000
- Preserves much of the dataset, but distorts distribution tails
:::

## Top-coding example

- Consider 6ft (182.88cm) is considered our maximum height threshold.

```{r}
df_top_coded <- df |>
  mutate(height_cm = if_else(height_cm > 182.88, 182.88, height_cm))

df_top_coded
```


## Adding Noise

- Introduces randomness to protect sensitive info
- Examples:
  - Add a small random amount to numeric values
  - Blur images or alter voices
  - Use differential privacy algorithms (advanced)

## Adding Noise to Height

This adds random noise to the height variable from a normal distribution ($\mu=0$, $\sigma=2$), reducing exact re-identification risk.

```{r}
set.seed(200) 

df_noisy <- df |>
  mutate(height_cm_noisy = height_cm + rnorm(n(), mean = 0, sd = 2)) |>
	select(-height_cm)

df_noisy
```



## Permutation

::: incremental
- Swap values between individuals
- Makes linking variables across a record more difficult
- Maintains distributions, but breaks correlations
- Can limit the types of analyses possible
:::

## Permutation of Height Values

Here, the `height_cm` values are shuffled between individuals, preserving the overall distribution but breaking the link between person and value.


```{r}
set.seed(200)

df_permuted <- df |>
  mutate(height_cm_permuted = sample(height_cm)) |>
	select(-height_cm)

df_permuted
```



## Privacy vs. Utility Tradeoff

![](https://www.researchgate.net/publication/357987903/figure/fig1/AS:1114625957470208@1642758945429/Trade-off-between-privacy-level-and-utility-level-of-data.png)

>[https://www.researchgate.net/figure/Trade-off-between-privacy-level-and-utility-level-of-data_fig1_357987903](https://www.researchgate.net/figure/Trade-off-between-privacy-level-and-utility-level-of-data_fig1_357987903)

## Key Takeaways

- Data exists on a spectrum of identifiability 
- Even seemingly anonymous data can often be re-identified (e.g., mosaic effect)
- Different techniques offer varying levels of protection and utility
- Context, external data and technological capabilities all affect re-identification risk
- Responsible data handling requires both technical skill and ethical awareness